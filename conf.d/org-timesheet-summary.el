(when (or
       ;; peccu-p
       ;; win-env-p
       ;; wsl-p
       )
  (with-eval-after-load 'org-clock
    (require 'cl)
    (defun calc-timecard()
      (interactive)
      (cl-flet
          ((add-format ()
                       (beginning-of-buffer)
                       (org-next-visible-heading 1)
                       (previous-line 3)
                       (beginning-of-line)
                       (org-kill-line)
                       (next-line 2)
                       (beginning-of-line)
                       (org-kill-line)
                       (org-yank)
                       (previous-line 2)
                       (end-of-line)
                       (org-yank))
           (update-table ()
                         (beginning-of-buffer)
                         (next-line)
                         (beginning-of-line)
                         ;; (org-ctrl-c-ctrl-c)
                         (org-update-dblock)
                         (message "calc-timecard: table updated")
                         )
           (move-column ()
                        ;; move column
                        (beginning-of-buffer)
                        (org-next-visible-heading 1)
                        (previous-line 4)
                        (end-of-line)
                        (backward-char 2)
                        (org-metaleft 1)
                        (org-metaleft 1)
                        (org-metaleft 1)
                        (org-metaleft 1)
                        (message "calc-timecard: column moved"))
           (remove-columns ()
                           (org-cycle)
                           (org-table-delete-column)
                           (org-cycle)
                           (org-table-delete-column)
                           (org-cycle)
                           (org-table-delete-column)
                           (org-cycle)
                           (org-table-delete-column)
                           (end-of-line)
                           (message "calc-timecard: column removed"))
           (replace-comma-to| ()
                              (save-excursion
                                (save-restriction
                                  (narrow-to-region (point-min) (point))
                                  (goto-char (point-min))
                                  (while (re-search-forward "," nil t)
                                    (replace-match "|"))))
                              (message "calc-timecard: replaced , to |"))
           (remove-selflearning-description ()
                                            (save-excursion
                                              (save-restriction
                                                (narrow-to-region (point-min) (point))
                                                (goto-char (point-min))
                                                (while (re-search-forward "自己啓発 [^ ]+" nil t)
                                                  (replace-match "自己啓発"))))
                                            (message "calc-timecard: replaced , to |"))
           (remove-header ()
                          (beginning-of-buffer)
                          (next-line 3)
                          (beginning-of-line)
                          (kill-line 5)
                          (message "calc-timecard: header removed"))
           (re-tabular ()
                       (org-cycle)
                       (message "calc-timecard: re tabulared"))
           (add-date ()
                     (progn
                       (beginning-of-buffer)
                       (re-search-forward "block " nil t)
                       (org-kill-line)
                       (org-yank)
                       (setq datestring (car kill-ring-yank-pointer))
                       (save-excursion
                         (save-restriction
                           (beginning-of-buffer)
                           (while (re-search-forward "^|" nil t)
                             (replace-match
                              (concat "| "
                                      (replace-regexp-in-string "-" "/" datestring)
                                      " |")))))
                       )
                     (message "calc-timecard: date column added"))
           (swap-column ()
                        (beginning-of-buffer)
                        (next-line 3)
                        (end-of-line)
                        (backward-char 1)
                        (org-metaleft 1)
                        (message "calc-timecard: column swapped"))
           (add-header ()
                       (beginning-of-buffer)
                       (next-line 3)
                       (beginning-of-line)
                       (insert
                        "|日付|プロジェクトNo|管理番号|ステージコード|活動コード|タスクID|成果物ID|工数|コメント|\n")
                       (beginning-of-line)
                       (org-cycle)
                       (message "calc-timecard: header added"))
           (export-to-csv ()
                          (flet ((org-quote-csv-field (s)
                                                      (concat "\"" (mapconcat 'identity (split-string s "\"") "\"\"") "\"")
                                                      ))
                            (org-table-export (concat timecard-output-path datestring ".csv") "orgtbl-to-csv")
                            )
                          (message "calc-timecard: exported to csv"))
           (change-charset-encode ()
                                  (save-excursion
                                    (find-file (concat timecard-output-path datestring ".csv"))
                                    (set-buffer-file-coding-system 'shift_jis-dos)
                                    (save-buffer)
                                    (kill-this-buffer)
                                    )
                                  (message "calc-timecard: encode changed"))
           (cleanup ()
                    (beginning-of-buffer)
                    (next-line 1)
                    (end-of-line)
                    (widen)
                    (message "calc-timecard: finished"))
           )
        (add-format)
        (update-table)
        (move-column)
        (remove-columns)
        (replace-comma-to|)
        (remove-selflearning-description)
        (remove-header)
        (re-tabular)
        (add-date)
        (swap-column)
        (add-header)
        (export-to-csv)
        (change-charset-encode)
        (add-format)
        (cleanup))
      ;; (org-ctrl-c-ctrl-c)
      ;;   (if (eq (org-element-property :type context) 'table.el)
      ;;       (message "%s" (substitute-command-keys "\\<org-mode-map>\
      ;; Use \\[org-edit-special] to edit table.el tables"))
      ;;     (let ((org-enable-table-editor t))
      ;;       (if (or (eq type 'table)
      ;;               ;; Check if point is at a TBLFM line.
      ;;               (and (eq type 'table-row)
      ;;                    (= (point) (org-element-property :end context))))

      ;; (save-excursion
      ;;   (if (org-at-TBLFM-p)
      ;;       (progn (require 'org-table)
      ;;              (org-table-calc-current-TBLFM))
      ;;     ;; (goto-char (org-element-property :contents-begin context))
      ;;     ;; (org-call-with-arg 'org-table-recalculate t)
      ;;     ;; (orgtbl-send-table 'maybe)
      ;;     ))
      ;; (org-table-maybe-eval-formula)
      ;; (cond (arg (call-interactively 'org-table-recalculate))
      ;;       ((org-table-maybe-recalculate-line))
      ;;       (t (org-table-align)))
      ;; ;; )))
      ;; (message "calc-timecard: format added")
      ))
  )
